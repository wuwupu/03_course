1.作用域
    因为控制器是更HTMlL节点相关联的，而html节点又有各自的作用范围，这也就导致了控制器有各自的作用范围
    $scope也有不同的作用范围
    根作用域：
    $rootScope，跟app绑定的，作用范围是整个app的作用范围
    子作用域
    $scope,跟控制器绑定，作用范围就是控制器的范围
2.过滤器
    angularjs使用锅炉起(filter)来对数据进行个书画展示
    在表达式中{{}}添加|(管道符号)
    如果需要传参，则在锅炉起后面添加：在冒号后面添加参数
    内置过滤器：
    1.uppercase
    2.lowercase
    3.date
    4.currency
    5.json  将传入的对对象以json格式展示
    6.filter    从数组中选择一个子集
    7.limitTo   限制数组或字符串的长度，如果参数是正数，表示从头开始截取，如果参数是负数，则从后面开始截取
    8.number:给数字添加千位分隔符
        如果没有参数，后面默认  保留3位有效小数（四舍五入）
        参数为正数是，保留小数点后m位
        参数为负数时，保留小数点后n位
    9.orderBy   给指定的数组排序
        不传参数是，默认排序为升序
        对象数组排序需要传递参数，不然无法排序
        参数为字符串时，按照对象中该字符串的属性进行排序
        参数为数组时，按照多个指定属性进行排序，第一个相同就比较第二个......
        降序排序：
            添加第二个参数  true(默认是false，升序)
            还可以使用+-进行排序
            +   升序
            -   降序
    练习：
    1.在文本框中输入字母，文本框下同时显示2行
    一行全部大写，一行全部小写
    2.过滤字符串'abcdefg',截取后五位，并将其转化为大写
    3.在文本框中输入数字，文本框下方显示该数字，保留小数点一位
    4.显示当前时间格式：格式2018年9月21日15是26分
    5，定义一个对象数组
            {id:101,name:"mike",age:11},
            {id:102,name:"lily",age:33},
            {id:103,name:"rose",age:24},
            {id:104,name:"xiaoming",age:67},
            {id:105,name:"lilei",age:27}
        将数组排序，分别：
        按照id升序，降序
        按照age降序排序，相同时id升序排序
    6.显示数组中，名字包含a的人的信息

    自定义过滤器
        使用应用模块调用filter方法
        该方法有2个参数：
        第一个参数：字符串，定义过滤器的名称
        第二个参数：是function，表示该过滤器的功能作用

3,依赖注入
angularjs采用的是模块化的组织方式，将通用代码封装成一个对象或者方法或者函数，用于提高代码的复用性。这样就出现使用者 与被使用者的关系，级依赖关系嘻嘻
而诸如依赖就是只在运行期间没自动查找依赖关系，然后将查找到的依赖传递给使用者的一种极致
常用的依赖注入有3种方式
1，行内注入
    将多个依赖的对象写在数组中，程序会自动去根据依赖的名称查找对应的模块对象，屠夫哦名称写错，会导致查找失败（注入错误），最后一个元素function的参数，建议使用以来的名称，且顺序与其保持一致
2，推断式注入
    使用时不声明依赖对象，而是将依赖对象直接作为参数传递给function,程序运行时，会更具function的参数名称自动去查找依赖对象
    使用推断式注入，参数必须写正确
    代码经过压缩后，也会导致依赖找不到建议使用行内注入
3.inject注入


